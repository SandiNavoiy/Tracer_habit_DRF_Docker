version: '3'  # Версия формата файла docker-compose.yml
services:
  #само приложение
  web:
    build:
      context: .
      dockerfile: Dockerfile # Определяет, как собирать образ для Django из Dockerfile.
    networks:  # Подключение к пользовательской сети
      - myNet
    ports:
      - "8000:8000"  # Проксирование порта 8000 контейнера на порт 8000 хоста.
    depends_on:
      - db # Указывает, что этот сервис зависит от сервиса "db".
      - redis   # Указывает, что этот сервис зависит от сервиса "redis".
    restart: unless-stopped  # Добавление настройки для перезапуска контейнера, всегда перезапуск


# PostgreSQL сервис
  db:
    restart: always
    image: postgres
    networks:  # Подключение к пользовательской сети
      - myNet
    ports:
      - "5432:5432"  # Проксирование порта 5432 контейнера на порт 5432 хоста.
    healthcheck: # Определение healthcheck для контейнера PostgreSQL.
      test: [ 'CMD-SHELL', 'pg_isready' ]
      interval: 10s # Интервал между проверками состояния.
      timeout: 5s   # Таймаут для проверки.
      retries: 5  # Количество попыток проверки.



# Redis сервис
  redis:
    image: redis:latest
    container_name: redis
    networks:  # Подключение к пользовательской сети
      - myNet

    ports:
      - "6379:6379"  # Проксирование порта 6379 контейнера на порт 6379 хоста.
    healthcheck: # Определение healthcheck для контейнера redis.
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s   # Интервал между проверками состояния.
      timeout: 5s  # Таймаут для проверки.
      retries: 3  # Количество попыток проверки.
    restart: unless-stopped  # Добавление настройки для перезапуска контейнера, всегда перезапуск
# Celery  сервис
  celery:
    restart: always
    build: .
    container_name: celery_app
    networks:  # Подключение к пользовательской сети
      - myNet

    depends_on:
      - db  # Указывает, что этот сервис зависит от сервиса "db".
      - redis  # Указывает, что этот сервис зависит от сервиса "redis"
    healthcheck: # Определение healthcheck для контейнера celery.
      test: [ "CMD", "celery", "inspect", "ping" ]
      interval: 10s   # Интервал между проверками состояния.
      timeout: 5s  # Таймаут для проверки.
      retries: 3  # Количество попыток проверки.


# Celery   beat сервис
  celery_beat:
    build: .
    container_name: celery_beat
    depends_on:
      - celery
# Пользовательская сеть
networks:
  myNet:
    driver: bridge

